services:
  api-gateway:
    image: nginx
    restart: always
    volumes:
      - type: bind
        source: ./api-gateway/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 8090:80

    healthcheck:
      test: service nginx status || exit 1
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

    develop:
      watch:
        - action: sync+restart
          path: ./api-gateway/nginx.conf
          target: /etc/nginx/conf.d/default.conf
    depends_on:
      - user-service
      - order-service
      - restaurant-service
      - delivery-service
      - upload-service
      - payment-service
      - review-service

  user-service:
    build: ./user-service
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./user-service/
    secrets:
      - jwt_private_key
    env_file: ".env"

  order-service:
    build: ./order-service
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./order-service/
    env_file: ".env"
    secrets:
      - jwt_key

  upload-service:
    build: ./upload-service
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./upload-service/
    volumes:
      - uploads:/uploads
    env_file: ".env"
    environment:
      APP_UPLOAD_DIRECTORY: /uploads
      APP_UPLOAD_URL_PREFIX: /api/v1/
    secrets:
      - jwt_key

  payment-service:
    build: ./payment-service
    restart: always
    env_file: ".env"

  review-service:
    build: ./review-service
    restart: always
    env_file: ".env"

  restaurant-service:
    build: ./restaurant-service
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./restaurant-service/
    env_file: ".env"
    secrets:
      - jwt_key

  delivery-service:
    build: ./delivery-service
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ./delivery-service/
    env_file: ".env"
    secrets:
      - jwt_key

  notification-service:
    build: ./notification-service
    restart: always
    env_file: ".env"
    develop:
      watch:
        - action: rebuild
          path: ./notification-service/src
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    env_file: ".env"
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq

volumes:
  mongo-data:
  uploads:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local

secrets:
  jwt_key:
    file: ./service.priv.key

  jwt_private_key:
    file: ./service.priv.key
