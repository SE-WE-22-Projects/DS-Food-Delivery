services:
  api-gateway:
    image: nginx
    volumes:
      - type: bind
        source: ./api-gateway/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 8090:80
    develop:
      watch:
        - action: restart
          path: ./api-gateway/nginx.conf
    depends_on:
      - user-service
      - order-service

  user-service:
    build: ./user-service
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./user-service/
    depends_on:
      - mongo
    environment:
      DATABASE_URL: "mongodb://mongo:27017"
    secrets:
      - jwt_private_key
  
  order-service:
    build: ./order-service
    restart: unless-stopped
    develop:
      watch:
        - action: rebuild
          path: ./order-service/
    depends_on:
      - mongo
    environment:
      DATABASE_URL: "mongodb://mongo:27017"
    secrets:
      - jwt_key

  web-ui:
    build: ./web-ui
    restart: unless-stopped
    ports:
      - 8091:80
    depends_on:
      - api-gateway
    develop:
      watch:
        - action: rebuild
          path: ./web-ui

  mongo:
    image: mongo
    command: 
     - "--replSet"
     - "rs0"
     - "--quiet"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate() }" | mongosh 
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:


secrets:
  jwt_key:
    file: ./service.priv.key
  
  jwt_private_key:
    file: ./service.priv.key
  